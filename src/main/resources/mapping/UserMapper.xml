<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xy.ssm.dao.UserDao">
<!--user_icon as userIcon,user_intention_job as userIntention ,字段被刪除-->
    <select id="selectAllUser" resultType="com.xy.ssm.model.CUser">
        select id,user_name as userName,user_phone as userPhone,user_email as userEmail,
        user_gender as userGender,user_realname as userRealName,
        user_profile as userProfile,user_type as userType , user_status as userStatus,user_password as userPassword,
        create_time as createTime
    </select>

    <update id="updateStudentStatus">
        update c_users set user_status =#{userStatus} where id = #{userId}
    </update>
<!--user_icon as userIcon,user_intention_job as userIntention ,-->
    <select id="getUserInfo" resultType="com.xy.ssm.model.CUser">
        select id,user_name as userName,user_phone as userPhone,user_email as userEmail,
        user_gender as userGender,user_realname as userRealName,
        user_profile as userProfile,user_type as userType , user_status as userStatus,user_password as userPassword,user_departments as userDepartments,user_major as userMajor,
        create_time as createTime  from c_users where id = #{userId}
    </select>
    <!--user_icon as userIcon,user_intention_job as userIntention ,-->
    <select id="getAllUsers" resultType="com.xy.ssm.model.CUser">
        select id,user_name as userName,user_phone as userPhone,user_email as userEmail,
        user_gender as userGender,user_realname as userRealName,
        user_profile as userProfile,user_type as userType , user_status as userStatus,user_password as userPassword,user_departments as userDepartments,user_major as userMajor,
        create_time as createTime  from c_users
    </select>


    <select id="getUserComment" resultType="com.xy.ssm.model.CComment">
        SELECT id,comm_commentator_id,comm_content,comm_publisher_id,comm_type,comm_publishe_icon,comm_publishe_name
        FROM c_comment
        WHERE comm_commentator_id = #{userId} and comm_type = "comm_comp"
        limit #{offset},#{limit}
    </select>

    <select id="getUserCommentCount" resultType="int">
        SELECT count(*)
        FROM c_comment
        WHERE comm_commentator_id = #{userId} and comm_type = "comm_comp"
    </select>
<!--j.job_demand_number as jobDemandNumber,j.job_requires_gender as jobRequiresGender,j.job_salary_type as jobSalaryType, j.job_salary as jobSalary,j.job_address as jobAddress ,-->
    <!--j.job_contact_phone as jobContactPhone,j.job_remarks as jobRemarks,-->
    <select id="getMyAppliSituation" resultType="com.xy.ssm.model.VOCApplication">
         select a.id,a.appli_user_id as appliUserId,a.appli_job_id as appliJobId,a.create_time as createTime,
        j.job_teacher_id as jobTeacherId,j.job_title as jobTitle,j.job_type as jobType,
        j.job_hours as jobHours ,
        j.job_introduction as jobIntroduction,j.job_status as jobStatus,
        j.job_deadline as jobDeadline,c.tea_name as jobTeacherName,s.static_value as appliStatus
        from c_jobs as j
        INNER JOIN c_application as a on j.id = a.appli_job_id
        INNER JOIN c_teacher as c on j.job_teacher_id = c.id
        INNER JOIN c_static as s on s.static_code=a.appli_status
        WHERE  a.appli_user_id = #{userId}
        <if test="5== jobStatus">
        and j.job_status = #{jobStatus} and  j.user_sign = 1
        </if>
        <if test="3 == jobStatus">
            and (j.job_status = 3 or j.job_status = 4)
        </if>
    </select>

    <delete id="quitJob">
        DELETE FROM c_application WHERE id = #{applicationId} and appli_user_id = #{userId}
    </delete>

    <update id="delApplication">
        update  c_application set user_sign = 0 where  appli_user_id = #{userId} and id = #{applicationId}
    </update>

    <update id="updateUserPassword">
        update c_users set user_password =#{newPw} where id = #{userId}
    </update>
    <!--添加作业文件-->
    <insert id="addHomFile" parameterType="java.util.Map">
        insert into c_hom_files (file_route,file_realname,file_type,file_size,file_hom_id,file_name,file_user_id)
        VALUES (#{file_route},#{file_realname},#{file_type},#{file_size},#{file_hom_id},#{file_name},#{file_user_id})
    </insert>
    <!--getMyHomFile-->
    <select id="getMyHomFile" parameterType="java.lang.Long"  resultType="com.xy.ssm.model.CHomFile">
        select file_id,file_realname,file_name,file_hom_id,file_user_id,file_size,file_route,file_type from c_hom_files where file_user_id like #{userId}
    </select>
</mapper>