<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xy.ssm.dao.CompanyDao">
    <insert id="insertJob" useGeneratedKeys="true" keyProperty="id" parameterType="com.xy.ssm.model.CCompany">
        insert into c_jobs(job_company_id,job_title,job_type,job_demand_number,job_requires_gender,job_salary_type,job_hours,job_salary,job_address,job_introduction,
        job_contact_phone,job_remarks,job_deadline,job_status,create_time)
        values(#{jobCompanyId},#{jobTitle},#{jobType},#{jobDemandNumber},#{jobRequiresGender},#{jobSalaryType},#{jobHours},#{jobSalary},#{jobAddress},#{jobIntroduction},#{jobContactPhone},
        #{jobRemarks},#{jobDeadline},0,#{createTime})
    </insert>
    <select id="selectCompanyByAccount" resultType="com.xy.ssm.model.CCompany">
        select id,comp_account as compAccount,comp_password as compPassword,comp_name as compName,
        comp_contacts as compContacts,comp_phone as compPhone,comp_email as compEmail,comp_info as compInfo ,
        comp_license as compLicense,comp_address as compAddress , comp_photo as compPhoto,comp_status as compStatus,
        create_time as createTime from c_company where comp_account = #{compAccount}
    </select>
    <select id="selectJobsByCompanyId" resultType="com.xy.ssm.model.CJobs">
        select id,job_company_id as jobCompanyId,job_title as jobTitle,job_type as jobType,
        job_demand_number as jobDemandNumber,job_requires_gender as jobRequiresGender,job_salary_type as jobSalaryType,job_hours as jobHours ,
        job_salary as jobSalary,job_address as jobAddress , job_introduction as jobIntroduction,job_contact_phone as jobContactPhone,job_status as jobStatus,job_remarks as jobRemarks,job_deadline as jobDeadline
        create_time as createTime from c_jobs where job_company_id = #{companyId}
        <if test="queryTerm != null and queryTerm != ''">
            WHERE  job_status=#{queryTerm}
        </if>
        LIMIT #{offset},#{limit}
    </select>
    <select id="selectJobsCountByCompanyId" resultType="int">
        SELECT count(*)
        FROM c_jobs
        WHERE job_company_id = #{companyId}
        <if test="queryTerm != null and queryTerm != ''">
            AND  (ber.resource_name like CONCAT('%',#{queryTerm},'%') or csr.business_value like CONCAT('%',#{queryTerm},'%' ))
        </if>
    </select>

    <select id="selectAllJobs" resultType="com.xy.ssm.model.CJobs">
        select id,job_company_id as jobCompanyId,job_title as jobTitle,job_type as jobType,
        job_demand_number as jobDemandNumber,job_requires_gender as jobRequiresGender,job_salary_type as jobSalaryType,job_hours as jobHours ,
        job_salary as jobSalary,job_address as jobAddress , job_introduction as jobIntroduction,job_contact_phone as jobContactPhone,job_status as jobStatus,job_remarks as jobRemarks,job_deadline as jobDeadline
        create_time as createTime from c_jobs WHERE  job_status=#{jobStatus}
        LIMIT #{offset},#{limit}
    </select>

    <select id="selectAllJobsCount" resultType="int">
        SELECT count(*)
        FROM c_jobs
        WHERE job_status=#{jobStatus}
    </select>

    <update id="updateJobStatus">
        update c_jobs set job_status =#{jobStatus} where id = #{jobId}
    </update>

    <select id="selectJobDetails" resultType="com.xy.ssm.model.CJobs">
        select a.id,a.job_company_id as jobCompanyId,a.job_title as jobTitle,a.job_type as jobType,
        a.job_demand_number as jobDemandNumber,a.job_requires_gender as jobRequiresGender,a.job_salary_type as jobSalaryType,a.job_hours as jobHours ,
        a.job_salary as jobSalary,a.job_address as jobAddress , a.job_introduction as jobIntroduction,a.job_contact_phone as jobContactPhone,a.job_status as jobStatus,a.job_remarks as jobRemarks,a.job_deadline as jobDeadline,
        a.create_time as createTime,b.comp_name as jobCompanyName,a.job_time as jobTime,
        a.create_time as createTime from c_jobs a
        LEFT JOIN c_company as b on a.job_company_id = b.id
        WHERE  a.id=#{jobId}
    </select>

    <select id="getJobApplicationCount" resultType="int">
        SELECT count(*)
        FROM c_application
        WHERE id = #{jobId} and appli_status="appli_apply"
    </select>

    <delete id="deleteJobById">
        DELETE FROM c_jobs WHERE id = #{jobId}
    </delete>

    <select id="getCompanyComment" resultType="com.xy.ssm.model.CComment">
        SELECT id,comm_commentator_id,comm_content,comm_publisher_id,comm_type,comm_publishe_icon,comm_publishe_name
        FROM c_comment
        WHERE comm_commentator_id = #{companyId} and comm_type = "comm_user"
        limit #{offset},#{limit}
    </select>

    <select id="getCompanyCommentCount" resultType="int">
        SELECT count(*)
        FROM c_comment
        WHERE comm_commentator_id = #{companyId} and comm_type = "comm_user"
    </select>

    <update id="updateCompanyStatus">
        update c_company set comp_status =#{compStatus} where id = #{companyId}
    </update>

    <select id="getEnrollmentSituation" resultType="com.xy.ssm.model.CApplication">
        SELECT u.id,u.user_name as userName,u.user_phone as userPhone,u.user_email as userEmail,
        u.user_icon as userIcon,u.user_gender as userGender,u.user_realname as userRealName,u.user_intention_job as userIntention ,
        u.user_profile as userProfile,u.user_type as userType , u.user_status as userStatus,a.appli_status as appliStatus,a.create_time as createTime
        FROM c_application as a
        INNER JOIN c_users as u on a.appli_user_id = u.id
        WHERE u.appli_job_id = #{jobId} and u.appli_status = #{appliStatus}
    </select>

    <update id="updateApplicationStatus">
        update c_application set appli_status =#{appliStatus} where appli_job_id = #{jobId} and appli_user_id=#{userId}
    </update>

    <update id="updateCompPassword">
        update c_application set comp_password =#{newPw} where id = #{cCompanyId}
    </update>

    <select id="getCompanyInfo" resultType="com.xy.ssm.model.CCompany">
        select id,comp_account as compAccount,comp_password as compPassword,comp_name as compName,
        comp_contacts as compContacts,comp_phone as compPhone,comp_email as compEmail,comp_info as compInfo ,
        comp_license as compLicense,comp_address as compAddress , comp_photo as compPhoto,comp_status as compStatus,
        create_time as createTime from c_company where id = #{companyId}
    </select>

</mapper>